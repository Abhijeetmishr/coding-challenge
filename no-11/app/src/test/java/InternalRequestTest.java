/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.http.HttpRequest;
import java.nio.ByteBuffer;
import java.nio.file.Paths;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;

import web.http.Http11Handler;
import web.http.HttpScanner;
import web.http.InternalRequest;

class InternalRequestTest {

    private Reader reader;

    void ReadReader(String testfile) throws FileNotFoundException, URISyntaxException {
        URL resource = InternalRequestTest.class.getResource("tests/" + testfile);
        File file = Paths.get(resource.toURI()).toFile();
        reader = new FileReader(file);
    }

    private static String readAllText(Reader reader) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(reader);
        StringBuilder stringBuilder = new StringBuilder();
        String line;

        while ((line = bufferedReader.readLine()) != null) {
            stringBuilder.append(line);
            stringBuilder.append(System.lineSeparator());
        }

        bufferedReader.close();
        return stringBuilder.toString();
    }

    @AfterEach
    void CloseReader() throws IOException {
        if (reader != null) {
            reader.close();
        }
    }

    @Test
    void getReq_helloget_expectsProtocol() throws URISyntaxException, IOException {

        // Arrange
        ReadReader("hello.txt");
        var http11 = new Http11Handler("www");
        var textWithRN = readAllText(reader);
        var text = HttpScanner.convertNewLines(textWithRN);
        var internalReq = new InternalRequest(http11, ByteBuffer.wrap(text.getBytes()));

        // Action
        HttpRequest webReq = internalReq.getRequest();

        // Assert
        assertNotNull(webReq.headers());
        assertEquals("curl/7.87.0", webReq.headers().firstValue("User-Agent").get());
        assertEquals("38", webReq.headers().firstValue("Content-Length").get());
    }

}
