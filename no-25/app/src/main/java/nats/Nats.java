package nats;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.util.concurrent.Callable;

import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;

@Command(name = "nats", mixinStandardHelpOptions = true, version = "nats 1.0", description = "This challenge is to build your own NATS server and client")
public class Nats implements Callable<Result> {

    public static void main(String[] args) {
        var nats = new Nats();
        var cmd = new CommandLine(nats);
        var exitCode = cmd.execute(args);
        cmd.getExecutionResult();
        System.exit(exitCode);
    }

    @Option(names = "-s", description = "-s specifies starting a server, default = false, using cli")
    boolean server = false;

    @Option(names = "-p", description = "-p specifies the port, default 4222")
    int port = 4222;

    @Option(names = "-h", description = "-h specifies the server hostname, default localhost")
    String hostname = "localhost";

    @Option(names = "-c", description = "-c specifies the command executed")
    String command = null;

    boolean isInteractive = true;

    private void init() {
        this.isInteractive = this.command == null;
    }

    @Override
    public Result call() throws Exception {
        this.init();
        if (this.server) {
            new NatsServer(this.port).start();
        } else if (this.isInteractive) {
            new NatsCli(this.hostname, this.port).startAndInput().stop();
        } else {
            new NatsCli(this.hostname, this.port).start().command(this.command).stop();
        }
        return new Result();
    }
}