/*
 * This Java source file was generated by the Gradle 'init' task.
 */


import jq.FileInput;
import jq.JsonQuery;
import jq.ReaderInput;
import json.JsonParserException;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Paths;

class JqTest {

    private Reader reader;

    void ReadReader(String testfile) throws FileNotFoundException, URISyntaxException {
        URL resource = JqTest.class.getResource("tests/"+testfile);
        File file = Paths.get(resource.toURI()).toFile();
        reader = new FileReader(file);
    }

    @AfterEach
    void CloseReader() throws IOException {
        if (reader != null) {
            reader.close();
        }
    }

    @Test void execute_currentindex0() throws URISyntaxException, IOException, JsonParserException {
        // Arrange
        ReadReader("github-commits.json");
        var jq = new JsonQuery(new ReaderInput(this.reader));
        // Action
        jq.execute(".[0]");
        // Assert
    }

    @Test void execute_index0_authorname() throws URISyntaxException, IOException, JsonParserException {
        // Arrange
        ReadReader("github-commits.json");
        var jq = new JsonQuery(new ReaderInput(this.reader));
        // Action
        jq.execute(".[0].commit.author.name");
        // Assert
    }


    @Test void execute_index0_object_name_email() throws URISyntaxException, IOException, JsonParserException {
        // Arrange
        ReadReader("github-commits.json");
        var jq = new JsonQuery(new ReaderInput(this.reader));
        // Action
        jq.execute(".[0].commit.author | { name, email }");
        // Assert
    }


    @Test void execute_indexnamed() throws URISyntaxException, IOException, JsonParserException {
        // Arrange
        ReadReader("github-commits.json");
        var jq = new JsonQuery(new ReaderInput(this.reader));
        // Action
        jq.execute(".[0].[\"commit\"]");
        // Assert
    }
    @Test void execute_indexnameddoubled() throws URISyntaxException, IOException, JsonParserException {
        // Arrange
        ReadReader("github-commits.json");
        var jq = new JsonQuery(new ReaderInput(this.reader));
        // Action
        jq.execute(".[0].[\"commit\"].author.email");
        // Assert
    }
}
