package lisp;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.util.concurrent.Callable;

import lisp.parser.LispRuntime;
import picocli.CommandLine.Option;
import picocli.CommandLine;

@CommandLine.Command(name = "lisp", mixinStandardHelpOptions = true, version = "lisp 1.0", description = "This challenge is to build Your Own Lisp Interpreter")
public class Lisp implements Callable<Result> {

    public static void main(String[] args) {
        var nats = new Lisp();
        var cmd = new CommandLine(nats);
        var exitCode = cmd.execute(args);
        Result result = cmd.getExecutionResult();
        if (result != null && result.toString() != null) {
            System.out.println(result.toString());
            System.exit(exitCode);
        }
    }

    @Option(names = {"-c"}, description = "-c specifies the command executed")
    String command = null;

    @Option(names = {"-f"}, description = "-f specifies a file name to load")
    String fileName = null;

    boolean isInteractive = true;

    @Override
    public Result call() throws Exception {
        var runtime = new LispRuntime();
        if (this.fileName != null) {
            runtime.execute("(load "+fileName+")");
        }
        if (this.command != null) {
            return new Result(runtime.executeAndPrint(this.command));
        } else {
            new LispConsole(runtime).run();
            return new Result("finished.");
        }
    }
}